plugins {
    id('com.android.application')
    id('kotlin-android')
    id('kotlin-android-extensions')
    id('kotlin-kapt')
    id('com.google.gms.google-services')
    id('com.google.firebase.crashlytics')
  //  id "org.sonarqube" version "3.1.1"
}

apply from: '../test_dependencies.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    signingConfigs {
        release {
            //Ideally these details are maintained outside source - build server and picked up by CI/CD pipeline
            storeFile file("keystore.jks")
            storePassword 'Demo@123'
            keyAlias 'key0'
            keyPassword 'Demo@123'
        }
    }

    packagingOptions {
        pickFirst "META-INF/INDEX.LIST"
        pickFirst "META-INF/io.netty.versions.properties"
    }

    defaultConfig {
        applicationId "com.joann.ditto"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "0.16(01)"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            debuggable false
//            minifyEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "APP_CENTER_KEY", "\"77ff932d-72e1-430f-ba3d-b8f0499ea8a6\""  //----- NS
            signingConfig signingConfigs.release
        }
        debug {
            // Only use this flag on builds you don't proguard or upload to beta-by-crashlytics
            debuggable true
            ext.alwaysUpdateBuildId = false
//            buildConfigField "String", "APP_CENTER_KEY", "\"77ff932d-72e1-430f-ba3d-b8f0499ea8a6\""  //----- NS
//          buildConfigField "String", "APP_CENTER_KEY", "\"d6e41159-e327-4f58-86fb-1d37d2878b77\""  //--- DEV
            buildConfigField "String", "APP_CENTER_KEY", "\"965a12cd-7f40-45ed-88de-6432d3d40155\""  // -- QA
        }
    }

    flavorDimensions "full"

    productFlavors {
        // When building a variant that uses this flavor, the following configurations
        // override those in the defaultConfig block.
        dev {
            // To avoid using legacy multidex when building from the command line,
            // set minSdkVersion to 21 or higher. When using Android Studio 2.3 or higher,
            // the build automatically avoids legacy multidex when deploying to a device running
            // API level 21 or higherâ€”regardless of what you set as your minSdkVersion.
            minSdkVersion 23
            //versionNameSuffix "-dev"
           // applicationIdSuffix '.dev'
        }

        prod {
            // If you've configured the defaultConfig block for the release version of
            // your app, you can leave this block empty and Gradle uses configurations in
            // the defaultConfig block instead. You still need to create this flavor.
            // Otherwise, all variants use the "dev" flavor configurations.
        }
    }

    buildFeatures{
        dataBinding = true // for data binding
        viewBinding = true // for view binding
    }

    // Required if you're using Kotlin:
    kotlinOptions {
        jvmTarget = "1.8"
    }
// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "4G"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.drawerlayout:drawerlayout:$drawerlayout"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_fragment_ktx"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_ui_ktx"

    testImplementation "junit:junit:$junit_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support"

    implementation "androidx.lifecycle:lifecycle-extensions:$live_data_extensions_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$live_data_extensions_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$live_data_extensions_version"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "androidx.navigation:navigation-fragment-ktx:${navigation_fragment}"
    implementation "androidx.navigation:navigation-ui-ktx:${navigation_ui}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockito_kotlin}"

    implementation "androidx.multidex:multidex:$multidex"

    /**
     * DAGGER
     */
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //Retrofit Dependencies
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    /**
     * RX JAVA
     */
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava2_android_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"

    /**
     * Stetho
     */
    implementation "com.facebook.stetho:stetho:$stetho"

    /**
     * Microsoft app center
     */
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"

    /**
     * Firebase
     */
    implementation platform("com.google.firebase:firebase-bom:${firebase_version}")
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation project(path: ':nav-graph')
    implementation project(path: ':non-core-lib')
    implementation project(path: ':core-lib')


    // Storage modules
    implementation project(path: ':storage-data')
    implementation project(path: ':storage-domain')

    implementation project(path: ':login-ui')
    implementation project(path: ':login-data')
    implementation project(path: ':login-domain')

    implementation project(path: ':splash-ui')
    implementation project(path: ':splash-data')
    implementation project(path: ':splash-domain')

    implementation project(path: ':instructions-ui')
    implementation project(path: ':instructions-domain')
    implementation project(path: ':instructions-data')

    implementation project(path: ':home-ui')

    implementation project(path: ':mylibrary-ui')
    implementation project(path: ':mylibrary-data')
    implementation project(path: ':mylibrary-domain')

    implementation project(path: ':workspace-ui')
    implementation project(path: ':workspace-data')
    implementation project(path: ':workspace-domain')

    implementation project(path: ':tutorial-ui')

    implementation project(path: ':onboarding-ui')
    implementation project(path: ':onboarding-data')
    implementation project(path: ':onboarding-domain')

    implementation project(path: ':logger')

    implementation project(path: ':calibration-ui')
    implementation project(path: ':calibration-domain')
    implementation project(path: ':calibration-data')

    implementation project(path: ':howto-data')
    implementation project(path: ':howto-ui')
    implementation project(path: ':howto-domain')
    implementation project(path: ':videoplayer')

    implementation project(path: ':menuitems-ui')
    implementation project(path: ':menuitems-domain')
    implementation project(path: ':menuitems-data')

    implementation project(path: ':home-data')
    implementation project(path: ':home-domain')
}
